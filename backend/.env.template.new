# AI Web App Environment Configuration Template
# Copy this file to .env and configure your settings

# Flask Configuration
SECRET_KEY=your-secret-key-here-change-in-production
FLASK_ENV=development

# Database Configuration
DATABASE_URL=sqlite:///ai_web_app.db

# AWS Configuration (SECURE APPROACH - RECOMMENDED)
# Use AWS CLI for credential management: 'aws configure'
# This is the most secure way to handle AWS credentials

# AWS Region (required)
AWS_DEFAULT_REGION=us-east-1

# AWS Profile (optional - use if you have multiple AWS profiles)
# AWS_PROFILE=your-profile-name

# LEGACY AWS Configuration (NOT RECOMMENDED - SECURITY RISK)
# Only use these if AWS CLI is not available
# These credentials will be used as a fallback only
# WARNING: Never commit these values to version control!

# AWS_ACCESS_KEY_ID=your-access-key-id
# AWS_SECRET_ACCESS_KEY=your-secret-access-key

# Application Settings
MAX_CONTENT_LENGTH=16777216
UPLOAD_FOLDER=uploads

# Chat Configuration
MAX_TOKENS=4000
TEMPERATURE=0.7

# Security Notes:
# 1. RECOMMENDED: Use 'aws configure' to set up credentials securely
# 2. For multiple profiles: 'aws configure --profile profile-name'
# 3. For production: Use IAM roles instead of access keys
# 4. Never commit .env files with real credentials to version control
# 5. The application will automatically detect and use AWS CLI credentials
